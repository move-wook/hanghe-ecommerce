version: '3'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_main
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=hhplus
    volumes:
      - ./data/mysql/:/var/lib/mysql
    networks:
      - app-network

  mysql_test:
    image: mysql:8.0
    container_name: mysql_test
    ports:
      - "3307:3307"  # 테스트 DB의 포트를 3307로 설정 (메인과 충돌 방지)
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=test_user
      - MYSQL_PASSWORD=test_passwordd
      - MYSQL_DATABASE=hhplus_test  # 테스트용 DB 이름
    volumes:
      - ./data/mysql_test/:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ] # AOF 영속성 활성화
    networks:
      - app-network


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"  # 외부 접근용
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network
    depends_on:
      - zookeeper
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
    volumes:
      - influxdb-data:/var/lib/influxdb
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - app-network

  k6:
    image: grafana/k6
    container_name: k6
    volumes:
      - ./docs/k6:/k6  # IntelliJ 프로젝트의 docs/k6 폴더를 컨테이너 내부의 /k6 디렉토리로 마운트
    entrypoint: ["sh", "-c", "sleep infinity"]  # 컨테이너가 종료되지 않고 대기 상태 유지
    depends_on:
      - influxdb
    networks:
      - app-network

volumes:
  influxdb-data:
  grafana-data:

networks:
  app-network:
    driver: bridge